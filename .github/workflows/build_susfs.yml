name: build_susfs
run-name: susfs build for ${{ inputs.CODENAME || github.event.inputs.CODENAME }}

on:
  workflow_dispatch:
    inputs:
      CODENAME:
        description: 'Device Codename (OPKona)'
        default: 'OPKona'
        required: true
        type: choice
        options:
          - OPKona
      clang:
        description: 'Clang option'
        required: true
        default: 'ZyC Stable'
        type: choice
        options:
          - 'ZyC Stable'
          - 'WeebX Stable'
          - 'WeebX Beta'
  workflow_call:
    inputs:
      CODENAME:
        description: 'Device Codename (OPKona)'
        required: true
        type: string
      clang:
        description: 'Clang option'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      CODENAME: ${{ inputs.CODENAME || github.event.inputs.CODENAME }}
      clang: ${{ inputs.clang || github.event.inputs.clang }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: 'op-staging_susfs155'
        fetch-depth: 1
        submodules: 'recursive'

    - name: Setup Clang cache
      id: clang-cache
      uses: actions/cache@v3
      with:
        path: clang
        key: clang-${{ env.clang }}-${{ hashFiles('**/clang.txt') }}
        restore-keys: |
          clang-${{ env.clang }}-

    - name: Set up environment
      run: |
        # Setup artifact name
        TIME="$(date "+%Y%m%d%H%M")"
        ZIP_NAME="RealKing-susfs-${{ env.CODENAME }}-$TIME"
        echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

        # Setup clang only if not cached
        if [ ! -d "clang" ]; then
          if [[ "${{ env.clang }}" == "ZyC Stable" ]]; then
            CLANG_URL=$(curl -s https://raw.githubusercontent.com/v3kt0r-87/Clang-Stable/main/clang-zyc.txt)
          elif [[ "${{ env.clang }}" == "WeebX Stable" ]]; then
            CLANG_URL=$(curl -s https://raw.githubusercontent.com/v3kt0r-87/Clang-Stable/main/clang-weebx.txt)
          elif [[ "${{ env.clang }}" == "WeebX Beta" ]]; then
            CLANG_URL=$(curl -s https://raw.githubusercontent.com/v3kt0r-87/Clang-Stable/main/clang-weebx-beta.txt)
          else
            echo "Invalid Clang option. Please use 'ZyC Stable', 'WeebX Stable', or 'WeebX Beta'."
            exit 1
          fi
          wget "$CLANG_URL" -qO "clang.tar.gz"
          mkdir clang && tar -xvf clang.tar.gz -C clang && rm -rf clang.tar.gz
        else
          echo "Using cached Clang toolchain"
        fi

        # Setup KernelSU-Next with susfs
        curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next-susfs/kernel/setup.sh" | bash -s next-susfs-dev

        # Add other ksu manager support
        cd KernelSU-Next
        curl -Ls https://raw.githubusercontent.com/KOWX712/files/refs/heads/main/0001-add-other-ksu-manager-support.patch | patch -p1
        cd ..

    - name: Build kernel
      run: |
        # Set linker and path variables
        LINKER="lld"
        DIR=`readlink -f .`
        MAIN=`readlink -f ${DIR}/..`
        KERNEL_DEFCONFIG=vendor/kona-perf_defconfig
        KERNEL_DIR=`pwd`
        ZIMAGE_DIR="$KERNEL_DIR/out/arch/arm64/boot"
        export PATH="$DIR/clang/bin:$PATH"
        export ARCH=arm64
        export SUBARCH=arm64
        export KBUILD_COMPILER_STRING="$($DIR/clang/bin/clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')"
        red='\033[0;31m'
        nocol='\033[0m'

        # Kernel compilation
        make $KERNEL_DEFCONFIG O=out CC=clang
        make -j$(nproc --all) O=out CC=clang ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- NM=llvm-nm OBJDUMP=llvm-objdump STRIP=llvm-strip

        # Prepare artifact directory
        mkdir -p artifact
        cp -fp $ZIMAGE_DIR/Image.gz artifact
        cp -fp $ZIMAGE_DIR/dtbo.img artifact
        cp -fp $ZIMAGE_DIR/dtb artifact
        cp -rp ./anykernel/* artifact

    - name: Upload Kernel Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ZIP_NAME }}
        path: artifact
        include-hidden-files: true
